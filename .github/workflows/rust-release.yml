name: Build Release
run-name: test/build/release on push a tag version. ðŸš€
on:
  push:
    tags:
      - 'v[0-9]+.*'

jobs:
  multi_os_release:  
    strategy:     
      matrix: 
        # ------------------------------------
        # main config                      
        os: [windows-latest, ubuntu-latest]
        # ------------------------------------

    runs-on: ${{ matrix.os }}
    steps:

      - uses: actions/checkout@v4

#       Cache disabled because its not working properly.
#       variable $ {{ runner.os }} with space to be commented
#
#      - name: Cache
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            target
#          key: $ {{ runner.os }}-cargo

      - name: Rust update and test
        run: |     
          rustup update
          rustup component add clippy

          cargo clippy -V
          rustc -V
          
          cargo clippy --all-targets --all-features -- -D warnings
          cargo test --release --workspace

      - name: Build
        run: cargo build --release

      - name: Compress Windows
        if: startsWith(matrix.os, 'win')
        run: Compress-Archive -DestinationPath ${{ github.event.repository.name }}-windows-latest-x64.zip -Path target\release\${{ github.event.repository.name }}.exe
     
      - name: Compress Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: zip -j ${{ github.event.repository.name }}-linux-latest-x64.zip target/release/${{ github.event.repository.name }}         
     

      - name: Run automatic changelog
        uses: ./.github/actions/auto-changelog
        with:
          file: 'CHANGELOG.md'

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: ./changelog.txt    
          files: |
            *-x64.zip

# examples
# https://github.com/NFIBrokerage/slipstream/blob/2148aaee15/.github/workflows/ci.yml#L31-L47

# bash
# https://github.com/japaric/trust/blob/master/ci/install.sh
# https://github.com/cross-rs/cross

# Fedora MinGW
# https://docs.fedoraproject.org/en-US/packaging-guidelines/MinGW/